#!/usr/local/bin/perl -w
use strict;

use AnyEvent::Watchdog autorestart => 1, heartbeat => 300;

use AnyEvent;
use Getopt::Long;
use Sys::Hostname;
use YAML;

use Wubot::Logger;
my $logger = Log::Log4perl::get_logger( 'default' );

use Wubot::Check;
use Wubot::Config;
use Wubot::Reactor;
use Wubot::Reactor::MessagePoster;
use Wubot::Reactor::Growl;
use Wubot::Reactor::Console;
#use Wubot::Reactor::Voice;
use Wubot::Reactor::Maildir;
use Wubot::Reactor::HTMLStrip;

my $config_directory = "$ENV{HOME}/wubot/config";
unless ( -d $config_directory ) {
    mkpath( $config_directory );
}

my $message_directory = "$ENV{HOME}/wubot/reactor";

#my $config  = Wubot::Config->new( { root => $config_directory } );

my $messenger = Wubot::LocalMessageStore->new();

#my $reactor  = Wubot::Reactor->new();
my $poster    = Wubot::Reactor::MessagePoster->new();
my $growl     = Wubot::Reactor::Growl->new();
my $console   = Wubot::Reactor::Console->new();
#my $voice    = Wubot::Reactor::Voice->new();
my $maildir   = Wubot::Reactor::Maildir->new();
my $htmlstrip = Wubot::Reactor::HTMLStrip->new();

my $hostname = Sys::Hostname::hostname();
$hostname =~ s|\..*$||;

$logger->info( "Setting up timer..." );
my $end = AnyEvent->condvar;

my $timer = AnyEvent->timer( after    => 1,
                             interval => 5,
                             cb       => sub {

                                 while ( my $message = $messenger->get( $message_directory ) ) {
                                     react( $message );
                                 }
                             },
                         );

$logger->error( "Running..." );
$end->recv;
$logger->error( "Ended..." );


sub react {
    my ( $message ) = @_;

    $logger->debug( "Message received from: $message->{key}" );

    if ( $message->{subject} ) {

        $htmlstrip->react( $message,
                           { field => 'subject' }
                       );

        if ( $message->{body} ) {

            $htmlstrip->react( $message,
                               { field => 'body' }
                           );

            $maildir->react( $message,
                             { path => "$ENV{HOME}/wubot/mail" },
                         );
        }

        # remove 'key' field for messages that came from AppWubot,
        # just adds noise since plugin was already added to those
        # subjects.
        if ( $message->{key} && $message->{key} =~ m|^AppWubot| ) {
            delete $message->{key}
        }

        $growl->react( $message,
                       { image_dir => "$ENV{HOME}/.icons", },
                   );

        $console->react( $message );

        #$voice->react(   $message );

        # navi is my laptop--if the message originates there, it will
        # already go through growl/voice notification--no need to
        # trigger another notification.
        if ( $hostname eq "navi" ) {
            $message->{quiet_growl} = 1;
            $message->{quiet_voice} = 1;
        }
    }

    # if the message originated on this host, and the 'no_post' option
    # is not set, then forward the message to my App::Wubot instance
    if ( $message->{hostname} eq $hostname && ! $message->{no_post} ) {

        $poster->react( $message,
                        { url => 'http://wubot/cgi-bin/wubot-message.cgi', },
                    );
    }

}
