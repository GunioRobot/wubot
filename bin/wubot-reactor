#!/usr/local/bin/perl -w
use strict;

use AnyEvent::Watchdog autorestart => 1, heartbeat => 300;

use AnyEvent;
use Getopt::Long;
use Sys::Hostname;
use YAML;

use Wubot::Logger;
my $logger = Log::Log4perl::get_logger( 'default' );

use Wubot::Config;
use Wubot::Reactor;
use Wubot::Reactor::MessagePoster;

my $message_directory = "$ENV{HOME}/wubot/reactor";

my $messenger = Wubot::LocalMessageStore->new();
my $poster    = Wubot::Reactor::MessagePoster->new();

my $reactor_config = "$ENV{HOME}/wubot/config/reactor.yaml";
$logger->info( "loading reactor config: $reactor_config" );
my $config = YAML::LoadFile( $reactor_config );

my $num_rules = scalar @{ $config->{rules} };
$logger->warn( "Loaded $num_rules rules" );

my $reactor = Wubot::Reactor->new( config => $config );

my $hostname = Sys::Hostname::hostname();
$hostname =~ s|\..*$||;

$logger->info( "Setting up timer..." );
my $end = AnyEvent->condvar;

my $lastupdate = time;
my $maxcount   = 50;

my $timer = AnyEvent->timer( after    => 1,
                             interval => 1,
                             cb       => sub {

                                 my $count = 0;

                                 my $now = time;
                                 while ( my ( $message, $callback ) = $messenger->get( $message_directory ) ) {
                                     $count++;

                                     # send message through the reactor
                                     eval {                          # try
                                         react( $message );
                                         1;
                                     } or do {                       # catch
                                         my $error = $@;
                                         warn "ERROR in reaction: $@";
                                         print YAML::Dump $message;
                                     };

                                     # delete the message now that it has been processed
                                     $callback->();

                                     $lastupdate = $now;
                                     return if $count >= $maxcount;
                                 }

                                 if ( $now - $lastupdate > 120 ) {
                                     react( { subject    => 'reactor has not received a message in more than 2 minutes',
                                              key        => 'wubot-reactor',
                                              lastupdate => $now,
                                          } );
                                 }
                             },
                         );

$logger->error( "Running..." );
$end->recv;
$logger->error( "Ended..." );


sub react {
    my ( $message ) = @_;

    $logger->debug( "Message received from: $message->{key}" );
    $reactor->react( $message );
}
